---
// src/pages/quotes/index.astro
import { getCollection } from 'astro:content';
import Layout from '@/layouts/Layout.astro';

const quotes = await getCollection('quotes');
const sortedQuotes = quotes.sort((a, b) => {
  if (a.data.page && b.data.page) return a.data.page - b.data.page;
  return a.id.localeCompare(b.id);
});

// Group quotes by theme
const quotesByTheme = quotes.reduce((acc, quote) => {
  const theme = quote.data.theme;
  if (!acc[theme]) acc[theme] = [];
  acc[theme].push(quote);
  return acc;
}, {} as Record<string, typeof quotes>);
---

<Layout 
  title="All Quotes - I Am That" 
  description="Complete collection of wisdom from Nisargadatta Maharaj's I Am That. Browse all quotes organized by theme and difficulty."
>
  <main class="quotes-page">
    <div class="container">
      <header class="page-header">
        <h1>All Quotes from I Am That</h1>
        <p class="subtitle">
          {quotes.length} profound teachings from Sri Nisargadatta Maharaj
        </p>
        <nav class="quick-nav">
          <a href="/" class="nav-link">‚Üê Random Quote</a>
          <a href="#themes" class="nav-link">Browse by Theme</a>
        </nav>
      </header>

      <section id="themes" class="themes-section">
        <h2>Browse by Theme</h2>
        <div class="theme-grid">
          {Object.entries(quotesByTheme).map(([theme, themeQuotes]) => (
            <div class="theme-card">
              <h3 class="theme-title">{theme}</h3>
              <span class="quote-count">{themeQuotes.length} quotes</span>
              <div class="theme-quotes">
                {themeQuotes.slice(0, 3).map(quote => (
                  <a href={`/quotes/${quote.slug}`} class="quote-preview">
                    <span class="quote-snippet">
                      "{quote.body.substring(0, 80)}..."
                    </span>
                    {quote.data.page && (
                      <span class="location">loc. {quote.data.page}</span>
                    )}
                  </a>
                ))}
                {themeQuotes.length > 3 && (
                  <span class="more-quotes">+{themeQuotes.length - 3} more</span>
                )}
              </div>
            </div>
          ))}
        </div>
      </section>

      <section class="all-quotes-section">
        <h2>Complete Collection</h2>
        <div class="quotes-list">
          {sortedQuotes.map((quote, index) => (
            <article class="quote-item">
              <a href={`/quotes/${quote.slug}`} class="quote-link">
                <div class="quote-header">
                  <span class="quote-number">#{index + 1}</span>
                  <span class="quote-theme">{quote.data.theme}</span>
                  {quote.data.page && (
                    <span class="quote-location">loc. {quote.data.page}</span>
                  )}
                </div>
                <blockquote class="quote-text">
                  "{quote.body}"
                </blockquote>
                <div class="quote-meta">
                  {quote.data.difficulty && (
                    <span class="difficulty difficulty-{quote.data.difficulty}">
                      {quote.data.difficulty}
                    </span>
                  )}
                  {quote.data.tags && (
                    <div class="tags">
                      {quote.data.tags.slice(0, 3).map(tag => (
                        <span class="tag">{tag}</span>
                      ))}
                    </div>
                  )}
                </div>
              </a>
            </article>
          ))}
        </div>
      </section>
    </div>
  </main>
</Layout>

<style>
  .quotes-page {
    min-height: 100vh;
    background: linear-gradient(135deg, #fafafa 0%, #f0f0f0 100%);
    padding: 2rem 0;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
  }

  .page-header {
    text-align: center;
    margin-bottom: 4rem;
    padding: 2rem 0;
  }

  .page-header h1 {
    font-family: 'Crimson Text', serif;
    font-size: clamp(2.5rem, 5vw, 4rem);
    color: #2c2c2c;
    margin-bottom: 1rem;
    font-weight: 600;
  }

  .subtitle {
    font-size: 1.2rem;
    color: #666;
    margin-bottom: 2rem;
  }

  .quick-nav {
    display: flex;
    gap: 2rem;
    justify-content: center;
    flex-wrap: wrap;
  }

  .nav-link {
    padding: 0.75rem 1.5rem;
    background: white;
    border-radius: 50px;
    text-decoration: none;
    color: #2c2c2c;
    font-weight: 400;
    transition: all 0.3s ease;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
  }

  .nav-link:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 20px rgba(0,0,0,0.15);
  }

  .themes-section {
    margin-bottom: 6rem;
  }

  .themes-section h2 {
    font-family: 'Crimson Text', serif;
    font-size: 2rem;
    color: #2c2c2c;
    margin-bottom: 2rem;
    text-align: center;
  }

  .theme-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
    margin-bottom: 3rem;
  }

  .theme-card {
    background: white;
    padding: 2rem;
    border-radius: 12px;
    box-shadow: 0 4px 20px rgba(0,0,0,0.08);
    transition: transform 0.3s ease;
  }

  .theme-card:hover {
    transform: translateY(-5px);
  }

  .theme-title {
    font-size: 1.4rem;
    color: #2c2c2c;
    margin-bottom: 0.5rem;
    text-transform: capitalize;
  }

  .quote-count {
    font-size: 0.9rem;
    color: #999;
    margin-bottom: 1.5rem;
    display: block;
  }

  .theme-quotes {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .quote-preview {
    text-decoration: none;
    color: #555;
    padding: 1rem;
    background: #f8f8f8;
    border-radius: 8px;
    transition: background 0.2s ease;
  }

  .quote-preview:hover {
    background: #f0f0f0;
  }

  .quote-snippet {
    display: block;
    font-style: italic;
    margin-bottom: 0.5rem;
    line-height: 1.4;
  }

  .location {
    font-size: 0.8rem;
    color: #999;
  }

  .more-quotes {
    font-size: 0.9rem;
    color: #666;
    font-style: italic;
    text-align: center;
    padding: 0.5rem;
  }

  .all-quotes-section h2 {
    font-family: 'Crimson Text', serif;
    font-size: 2rem;
    color: #2c2c2c;
    margin-bottom: 2rem;
    text-align: center;
  }

  .quotes-list {
    display: grid;
    gap: 2rem;
  }

  .quote-item {
    background: white;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 4px 20px rgba(0,0,0,0.08);
    transition: all 0.3s ease;
  }

  .quote-item:hover {
    transform: translateY(-3px);
    box-shadow: 0 8px 30px rgba(0,0,0,0.12);
  }

  .quote-link {
    text-decoration: none;
    color: inherit;
    display: block;
    padding: 2rem;
  }

  .quote-header {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 1.5rem;
    flex-wrap: wrap;
  }

  .quote-number {
    font-weight: 600;
    color: #999;
    font-size: 0.9rem;
  }

  .quote-theme {
    background: #f0f0f0;
    padding: 0.25rem 0.75rem;
    border-radius: 20px;
    font-size: 0.8rem;
    text-transform: lowercase;
    color: #666;
  }

  .quote-location {
    font-size: 0.8rem;
    color: #999;
    margin-left: auto;
  }

  .quote-text {
    font-family: 'Crimson Text', serif;
    font-size: 1.3rem;
    line-height: 1.6;
    color: #2c2c2c;
    margin: 0 0 1.5rem 0;
    font-style: italic;
  }

  .quote-meta {
    display: flex;
    align-items: center;
    gap: 1rem;
    flex-wrap: wrap;
  }

  .difficulty {
    padding: 0.25rem 0.75rem;
    border-radius: 20px;
    font-size: 0.8rem;
    font-weight: 500;
  }

  .difficulty-beginner { background: #e8f5e8; color: #2d5a2d; }
  .difficulty-intermediate { background: #fff3e0; color: #bf6000; }
  .difficulty-advanced { background: #fce4ec; color: #8e24aa; }

  .tags {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
  }

  .tag {
    background: #f5f5f5;
    padding: 0.2rem 0.6rem;
    border-radius: 15px;
    font-size: 0.7rem;
    color: #666;
  }

  @media (max-width: 768px) {
    .container {
      padding: 0 1rem;
    }
    
    .theme-grid {
      grid-template-columns: 1fr;
    }
    
    .quote-header {
      flex-direction: column;
      align-items: flex-start;
    }
    
    .quote-location {
      margin-left: 0;
    }
  }
</style>